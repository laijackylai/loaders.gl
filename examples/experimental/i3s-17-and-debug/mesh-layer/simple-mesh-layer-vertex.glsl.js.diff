diff --git a/home/user/apps/deck.gl/modules/mesh-layers/src/simple-mesh-layer/simple-mesh-layer-vertex.glsl.js b/./mesh-layer/simple-mesh-layer-vertex.glsl.js
index a18990ea..eb17433f 100644
--- a/home/user/apps/deck.gl/modules/mesh-layers/src/simple-mesh-layer/simple-mesh-layer-vertex.glsl.js
+++ b/./mesh-layer/simple-mesh-layer-vertex.glsl.js
@@ -10,6 +10,8 @@ in vec3 positions;
 in vec3 normals;
 in vec3 colors;
 in vec2 texCoords;
+in vec4 uvRegions;
+in vec3 pickingColors;
 
 // Instance attributes
 in vec3 instancePositions;
@@ -27,11 +29,37 @@ out vec4 position_commonspace;
 out vec4 vColor;
 
 void main(void) {
+  #ifdef HAS_UV_REGION
+    vec2 uv = fract(texCoords) * (uvRegions.zw - uvRegions.xy) + uvRegions.xy;
+  #else
+    vec2 uv = texCoords;
+  #endif
+
   geometry.worldPosition = instancePositions;
-  geometry.uv = texCoords;
-  geometry.pickingColor = instancePickingColors;
+  geometry.uv = uv;
+
+  #ifdef INSTANCE_PICKING_MODE
+    geometry.pickingColor = instancePickingColors;
+  #else
+    geometry.pickingColor = pickingColors;
+  #endif
+
+  #ifdef MODULE_PBR
+    // set PBR data
+    #ifdef HAS_NORMALS
+      pbr_vNormal = project_normal(instanceModelMatrix * normals);
+      geometry.normal = pbr_vNormal;
+    #endif
 
-  vTexCoord = texCoords;
+    #ifdef HAS_UV
+      pbr_vUV = uv;
+    #else
+      pbr_vUV = vec2(0., 0.);
+    #endif
+    geometry.uv = pbr_vUV;
+  #endif
+
+  vTexCoord = uv;
   cameraPosition = project_uCameraPosition;
   normals_commonspace = project_normal(instanceModelMatrix * normals);
   vColor = vec4(colors * instanceColors.rgb, instanceColors.a);
@@ -50,6 +78,12 @@ void main(void) {
   }
 
   geometry.position = position_commonspace;
+
+  #ifdef MODULE_PBR
+    // set PBR data
+    pbr_vPosition = geometry.position.xyz;
+  #endif
+
   DECKGL_FILTER_GL_POSITION(gl_Position, geometry);
 
   DECKGL_FILTER_COLOR(vColor, geometry);
